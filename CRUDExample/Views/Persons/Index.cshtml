@model IEnumerable<PersonResponse>

@{
	ViewBag.Title = "Persons";
}
<form action="~/persons/index" method="get">
	<div class="flex">
		<div class="flex-1">
			<div class="text-grey">
				<span>Contacts</span>
				<i class="fa fa-solid fa-caret-right"></i>
				<span class="text-blue">Persons</span>
			</div>
		</div>
		<div class="flex-1 text-right">
			<a class="button-link button-blue-back" href="~/persons/create">Add new entry</a>
			<a class="button-link button-blue-back ml" href="~/persons/pdf">Download PDF</a>
			<a class="button-link button-blue-back ml" href="~/persons/csv">Download CSV</a>
			<a class="button-link button-blue-back ml" href="~/persons/excel">Download excel</a>
		</div>
	</div>

	<div class="table-container">
		<div class="flex">
			<div class="flex-1">
				<h1>Persons</h1>
			</div>
			<div class="flex-3 text-right">
				<label>Search by: </label>
				<select class="search-dropdown" name="searchBy" style="width:200px">
					@foreach (var field in ViewBag.SearchField)
					{
						if (field.Key == ViewBag.CurrentSearchBy)
						{
							<option value="@field.Key" selected>@field.Value</option>
							continue;
						}
						<option value="@field.Key">@field.Value</option>
					}
				</select>
				<input type="search" id="search" name="searchString" style="width:200px" class="search-text" placeholder="Search" value="@ViewBag.CurrentSearchString" />
				<button class="search-button">Search</button>
				<a href="~/persons/index"> clear all</a>
			</div>
		</div>

		<table class="table w-100 mt">
					<thead>
						<tr>
							@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
							{ "ColumnName", nameof(PersonResponse.PersonName) },
							{ "DisplayName", "Person Name" },
							})

							@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
							{ "ColumnName", nameof(PersonResponse.Email) },
							{ "DisplayName", "Email" },
							})

							@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
							{ "ColumnName", nameof(PersonResponse.DateOfBirth) },
							{ "DisplayName", "Date of Birth" },
							})

							@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
							{ "ColumnName", nameof(PersonResponse.Age) },
							{ "DisplayName", "Age" },
							})

							@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
							{ "ColumnName", nameof(PersonResponse.Gender) },
							{ "DisplayName", "Gender" },
							})

							@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
							{ "ColumnName", nameof(PersonResponse.Country) },
							{ "DisplayName", "Country" },
							})

							@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
							{ "ColumnName", nameof(PersonResponse.Address) },
							{ "DisplayName", "Address" },
							})

							@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
							{ "ColumnName", nameof(PersonResponse.ReceiveNewsLetters) },
							{ "DisplayName", "Receive News Letters" },
							})
						</tr>
					</thead>
			<tbody>
				@foreach(PersonResponse person in Model){
					<tr>
						<td>@person.PersonName</td>
						<td>@person.Email</td>
						<td>@person.DateOfBirth</td>
						<td>@person.Age</td>
						<td>@person.Gender</td>
						<td>@person.Country</td>
						<td>@person.Address</td>
						<td>@person.ReceiveNewsLetters</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</form>
